#include <compare>
#include <iostream>
#include <string>

class Person {
public:
    Person(std::string name, int age) : name_(name), age_(age) {}
    auto operator<=>(const Person& other) const = default;
private:
    std::string name_;
    int age_;
};

int main() {
    Person alice("Alice", 30);
    Person bob("Bob", 25);

    if (alice < bob) {
        std::cout << "Alice is younger than Bob." << std::endl;
    } else if (alice > bob) {
        std::cout << "Alice is older than Bob." << std::endl;
    } else {
        std::cout << "Alice and Bob are the same age." << std::endl;
    }

    return 0;
}
// Output:
// Alice is older than Bob.
// Note: The output may vary based on the comparison logic defined in the class.
// Ensure you have C++20 support to use the spaceship operator (<=>).
// Compile with: g++ -std=c++20 -o person_comparison person_comparison
// Run with: ./person_comparison
// This code demonstrates the use of the spaceship operator for comparing objects of a class.
// It uses the default comparison generated by the compiler, which compares all members.
// The comparison is based on the lexicographical order of the members defined in the class.
// The spaceship operator simplifies the implementation of comparison operators in C++20.